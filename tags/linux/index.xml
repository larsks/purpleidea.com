<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on purpleidea.com</title>
    <link>https://purpleidea.com/tags/linux/</link>
    <description>Recent content in Linux on purpleidea.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language>
    <lastBuildDate>Mon, 25 Apr 2016 13:46:53 +0000</lastBuildDate>
    
	<atom:link href="https://purpleidea.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>One hour hacks: Remote LUKS over SSH</title>
      <link>https://purpleidea.com/blog/2016/04/25/one-hour-hacks-remote-luks-over-ssh/</link>
      <pubDate>Mon, 25 Apr 2016 13:46:53 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2016/04/25/one-hour-hacks-remote-luks-over-ssh/</guid>
      <description>I have a GNU/Linux server which I mount a few LUKS encrypted drives on. I only ever interact with the server over SSH, and I never want to keep the LUKS credentials on the remote server. I don&amp;rsquo;t have anything especially sensitive on the drives, but I think it&amp;rsquo;s a good security practice to encrypt it all, if only to add noise into the system and for solidarity with those who harbour much more sensitive data.</description>
    </item>
    
    <item>
      <title>Next generation configuration mgmt</title>
      <link>https://purpleidea.com/blog/2016/01/18/next-generation-configuration-mgmt/</link>
      <pubDate>Mon, 18 Jan 2016 00:52:10 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2016/01/18/next-generation-configuration-mgmt/</guid>
      <description>It&amp;rsquo;s no secret to the readers of this blog that I&amp;rsquo;ve been active in the configuration management space for some time. I owe most of my knowledge to what I&amp;rsquo;ve learned while working with Puppet and from other hackers working in and around various other communities.
I&amp;rsquo;ve published, a number, of articles, in an, attempt, to push, the field, forwards, and to, share the, knowledge, that I&amp;rsquo;ve, learned, with others. I&amp;rsquo;ve spent many nights thinking about these problems, but it is not without some chagrin that I realized that the current state-of-the-art in configuration management cannot easily (or elegantly) solve all the problems for which I wish to write solutions.</description>
    </item>
    
    <item>
      <title>New puppet-gluster features before Linuxcon</title>
      <link>https://purpleidea.com/blog/2013/09/08/new-puppet-gluster-features-before-linuxcon/</link>
      <pubDate>Sun, 08 Sep 2013 04:51:14 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2013/09/08/new-puppet-gluster-features-before-linuxcon/</guid>
      <description>Hey there,
I&amp;rsquo;ve done a bit of puppet-gluster hacking lately to try to squeeze some extra features and testing in before Linuxcon. Here&amp;rsquo;s a short list:  SELinux fixes to keep Dan Walsh happy :) Ping and status checks before volume creation. Now puppet-gluster will be less noisy about failures or missing executions that are due to the necessary incremental nature of puppet-gluster runs. You&amp;rsquo;ll need multiple puppet runs to get a complete setup, so don&amp;rsquo;t let puppet complain part way through.</description>
    </item>
    
    <item>
      <title>puppet lsi hardware raid module</title>
      <link>https://purpleidea.com/blog/2013/06/17/puppet-lsi-hardware-raid-module/</link>
      <pubDate>Mon, 17 Jun 2013 18:11:02 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2013/06/17/puppet-lsi-hardware-raid-module/</guid>
      <description>In response to some discussion in the gluster community, I am releasing my puppet-lsi module. It&amp;rsquo;s quite simple, but it is very useful for rebuilding machines. It could do a lot more, but I wanted to depend on the proprietary LSI tools as little as possible. Running megacli with puppet would be a very doable hack, but I&amp;rsquo;m not sure enough devops out there who would use that feature.
Usage is straightforward if you like the sensible defaults:</description>
    </item>
    
    <item>
      <title>Overriding attributes of collected exported resources</title>
      <link>https://purpleidea.com/blog/2013/05/14/overriding-attributes-of-collected-exported-resources/</link>
      <pubDate>Tue, 14 May 2013 01:41:23 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2013/05/14/overriding-attributes-of-collected-exported-resources/</guid>
      <description>This post is about a particularly elegant (and crucial) feature in puppet exported resources: attribute overriding. If you&amp;rsquo;re not already familiar with exported resources, you should start there, as they are the killer feature that makes configuration management with puppet awesome. (I haven&amp;rsquo;t found any explicit docs about this feature either, so feel free to comment if you know where they&amp;rsquo;re hidden.)
Setup: I&amp;rsquo;ve got a virtual machine which exports a resource to N different nodes.</description>
    </item>
    
    <item>
      <title>getting gedit to work like magic</title>
      <link>https://purpleidea.com/blog/2010/03/09/getting-gedit-to-work-like-magic/</link>
      <pubDate>Tue, 09 Mar 2010 17:17:51 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2010/03/09/getting-gedit-to-work-like-magic/</guid>
      <description>i use gnu/linux. it&amp;rsquo;s probably no secret. what is more of a secret, is that i secretly (well actually not so secretly) love using gedit for editing text. i still use vim, echo (gnu bash) and emacs (but only for org-mode).
vim is really, really great. but for day to day full-screen coding, i love working in gedit. i only have one [1] longstanding gripe, and today i believe that it is solved.</description>
    </item>
    
    <item>
      <title>piping data through ssh</title>
      <link>https://purpleidea.com/blog/2009/12/09/piping-data-through-ssh/</link>
      <pubDate>Wed, 09 Dec 2009 22:36:05 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2009/12/09/piping-data-through-ssh/</guid>
      <description>not that what i&amp;rsquo;m about to tell you is brilliant, new or revolutionary, however i thought i&amp;rsquo;d mention it in case you&amp;rsquo;re not doing it. also feel free to let me know if there is a better way.
problem: i have some stdout which comes from a command and i want it in a file on another machine.
i could first send it to a temp file, scp that over, and then remove the temp file; but instead, i&amp;rsquo;ll just:</description>
    </item>
    
    <item>
      <title>scary man pages</title>
      <link>https://purpleidea.com/blog/2009/11/02/scary-man-pages/</link>
      <pubDate>Mon, 02 Nov 2009 23:21:57 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2009/11/02/scary-man-pages/</guid>
      <description>while doing a little reading and research, i ended up reading a bit of the hdparm man page. never in my life have i read such a scary man page. i guess it is appropriate for halloween, but it came 2 days late in my case. as a result of my being so impressed with the sheer amount of warnings in the manual, i have decided to compile them here.  &amp;ndash;dco-restore Reset all drive settings, features, and accessible capacities back to factory defaults and full capabilities.</description>
    </item>
    
    <item>
      <title>why linux is powerful or: how to erase half your system and then fix it</title>
      <link>https://purpleidea.com/blog/2009/10/14/why-linux-is-powerful-or-how-to-erase-half-your-system-and-then-fix-it/</link>
      <pubDate>Wed, 14 Oct 2009 16:00:57 +0000</pubDate>
      
      <guid>https://purpleidea.com/blog/2009/10/14/why-linux-is-powerful-or-how-to-erase-half-your-system-and-then-fix-it/</guid>
      <description>after a brief bout of stupidity i quickly realized that my makefile had gone awry and was quickly eating through my filesystem.
after ^C killing it, it seems i only took out most of /lib/* and /usr/sbin/* &amp;ndash; who needs those anyways&amp;hellip; apparently almost everyone.
what happened next. well it turns out i was lucky and had a few shells and a webbrowser open&amp;ndash; attempts to launch new programs will fail, but existing programs are already loaded in memory so i was able to work.</description>
    </item>
    
  </channel>
</rss>